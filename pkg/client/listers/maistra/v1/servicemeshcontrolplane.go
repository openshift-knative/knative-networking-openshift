// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/maistra/istio-operator/pkg/apis/maistra/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceMeshControlPlaneLister helps list ServiceMeshControlPlanes.
type ServiceMeshControlPlaneLister interface {
	// List lists all ServiceMeshControlPlanes in the indexer.
	List(selector labels.Selector) (ret []*v1.ServiceMeshControlPlane, err error)
	// ServiceMeshControlPlanes returns an object that can list and get ServiceMeshControlPlanes.
	ServiceMeshControlPlanes(namespace string) ServiceMeshControlPlaneNamespaceLister
	ServiceMeshControlPlaneListerExpansion
}

// serviceMeshControlPlaneLister implements the ServiceMeshControlPlaneLister interface.
type serviceMeshControlPlaneLister struct {
	indexer cache.Indexer
}

// NewServiceMeshControlPlaneLister returns a new ServiceMeshControlPlaneLister.
func NewServiceMeshControlPlaneLister(indexer cache.Indexer) ServiceMeshControlPlaneLister {
	return &serviceMeshControlPlaneLister{indexer: indexer}
}

// List lists all ServiceMeshControlPlanes in the indexer.
func (s *serviceMeshControlPlaneLister) List(selector labels.Selector) (ret []*v1.ServiceMeshControlPlane, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ServiceMeshControlPlane))
	})
	return ret, err
}

// ServiceMeshControlPlanes returns an object that can list and get ServiceMeshControlPlanes.
func (s *serviceMeshControlPlaneLister) ServiceMeshControlPlanes(namespace string) ServiceMeshControlPlaneNamespaceLister {
	return serviceMeshControlPlaneNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceMeshControlPlaneNamespaceLister helps list and get ServiceMeshControlPlanes.
type ServiceMeshControlPlaneNamespaceLister interface {
	// List lists all ServiceMeshControlPlanes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ServiceMeshControlPlane, err error)
	// Get retrieves the ServiceMeshControlPlane from the indexer for a given namespace and name.
	Get(name string) (*v1.ServiceMeshControlPlane, error)
	ServiceMeshControlPlaneNamespaceListerExpansion
}

// serviceMeshControlPlaneNamespaceLister implements the ServiceMeshControlPlaneNamespaceLister
// interface.
type serviceMeshControlPlaneNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceMeshControlPlanes in the indexer for a given namespace.
func (s serviceMeshControlPlaneNamespaceLister) List(selector labels.Selector) (ret []*v1.ServiceMeshControlPlane, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ServiceMeshControlPlane))
	})
	return ret, err
}

// Get retrieves the ServiceMeshControlPlane from the indexer for a given namespace and name.
func (s serviceMeshControlPlaneNamespaceLister) Get(name string) (*v1.ServiceMeshControlPlane, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("servicemeshcontrolplane"), name)
	}
	return obj.(*v1.ServiceMeshControlPlane), nil
}
